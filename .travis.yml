language: c
sudo: false

env:
  global:

  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
  apt:
    packages:
      - g++-6
      - gcc-6
      - gcc-5
    sources: &sources
      - ubuntu-toolchain-r-test

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/dependencies/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/dependencies/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/dependencies/llvm-3.8.0
    - ${TRAVIS_BUILD_DIR}/dependencies/llvm-3.9.0
    - ${TRAVIS_BUILD_DIR}/dependencies/boost-1.59.0
    - ${TRAVIS_BUILD_DIR}/dependencies/boost-1.60.0
    - ${TRAVIS_BUILD_DIR}/dependencies/boost-1.61.0
    - ${TRAVIS_BUILD_DIR}/dependencies/boost-1.62.0
    - ${TRAVIS_BUILD_DIR}/dependencies/boost-1.63.0

matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:

    #  -- Supported compilers  ------------------------------------------------

    # Clang 3.5
    - os: linux
      env: LLVM_VERSION=3.5.2
      compiler: clang

    # Clang 3.6
    - os: linux
      env: LLVM_VERSION=3.6.2
      compiler: clang

    # Clang 3.7
    - os: linux
      env: LLVM_VERSION=3.7.1
      compiler: clang

    # Clang 3.8
    - os: linux
      env: LLVM_VERSION=3.8.0
      compiler: clang

    # Clang 3.9
    - os: linux
      env: LLVM_VERSION=3.9.0
      compiler: clang

    # Clang 4.0
    - os: linux
      env: LLVM_VERSION=4.0.0
      compiler: clang

    # GCC 5
    - os: linux
      env: COMPILER=gcc-5
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=gcc-6
      compiler: gcc

    # Xcode 6.4
    - os: osx
      env:
      osx_image: xcode6.4

    # Xcode 7.3
    - os: osx
      env:
      osx_image: xcode7.3

    # Xcode 8
    - os: osx
      env:
      osx_image: xcode8

install:

  #  -- Dependencies ----------------------------------------------------------

  - DEPS_DIR="${TRAVIS_BUILD_DIR}/dependencies"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  #  -- Setup default versions and override compilers if needed  --------------

  - if [[ "${COMPILER}" != "" ]]; then export CC=${COMPILER}; fi

  #  -- Get a recent CMake  ---------------------------------------------------

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

  #  -- Install Clang, libc++ and libc++abi -----------------------------------

  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
      LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
      if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"

        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=clang++)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
      fi

      export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
      export PATH="${LLVM_DIR}/clang/bin:${PATH}"
    fi
  - ${CC} --version

before_script:

  #  -- Setup build directory -------------------------------------------------

  - cd ${TRAVIS_BUILD_DIR}
  - (mkdir build && cd build && cmake ..)

script:
  - "cd ${TRAVIS_BUILD_DIR}/build && make"
  - "[[ $(find . -maxdepth 1 -name \"*logger*\") ]] && return 0 || return 1"
