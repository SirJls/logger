CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)
PROJECT(logger)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
    ${${PROJECT_NAME}_SOURCE_DIR}/CMake
)

IF(VERSION)
    SET(VERSION "${VERSION}")
ELSE()
    EXECUTE_PROCESS(
        COMMAND git describe --always --tags
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        OUTPUT_VARIABLE GIT_COMMIT_HASH
        OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    STRING(REGEX REPLACE "^v([0-9]+)\\..*" "\\1"
        VERSION_MAJOR "${GIT_COMMIT_HASH}"
    )
    STRING(REGEX REPLACE "^v[0-9]+\\.([0-9]+).*" "\\1"
        VERSION_MINOR "${GIT_COMMIT_HASH}"
    )
    STRING(REGEX REPLACE "^v[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1"
        VERSION_PATCH "${GIT_COMMIT_HASH}"
    )
    SET(VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
ENDIF()

OPTION(BUILD_SHARED_LIBS "Build the library dynamically" ON)

IF(CMAKE_BUILD_TYPE MATCHES Debug)
    MESSAGE(STATUS "Building with debugging information")
ELSE()
    SET(CMAKE_BUILD_TYPE Release FORCE)
    MESSAGE(STATUS "Building release version")
ENDIF()

SET (LOGGER_LIB_TYPE STATIC)
IF(BUILD_SHARED_LIBS)
    SET (LOGGER_LIB_TYPE SHARED)
ENDIF()

MESSAGE(STATUS "Library type set to: ${LOGGER_LIB_TYPE}")

SET(CMAKE_C_STANDARD 99)
SET(CMAKE_C_EXTENSIONS OFF)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wextra")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unused-parameter")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")

FILE(GLOB SRCS "${CMAKE_CURRENT_SOURCE_DIR}/*.c")
ADD_LIBRARY(${PROJECT_NAME}
    ${SRCS}
)

SET_TARGET_PROPERTIES(${PROJECT_NAME}
    PROPERTIES SOVERSION ${VERSION}
)

INSTALL(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
    ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
)

FILE(GLOB HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
INSTALL(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
